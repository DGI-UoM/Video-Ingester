[Fedora]
url=http://torus.local:8080/fedora
namespace=uofm
username=fedora_um
password=fedorapw

; this is the name of the host collection to create everything under
host_collection_name=Audio Video collection
; if you don't want a host collection then set
;host_collection_pid=islandora:top ; this will override the host_collection_name value
host_collection_pid=%(namespace)s:audiovideo

; this is the aggregate object that will contain all of your objects
aggregate_name=Anderson
; if you don't want an aggregate object then set
;aggregate_pid=%(host_collection_pid)s ; this will override the aggregate_name value
aggregate_pid=%(namespace)s:anderson

[Solr]
url=http://localhost:8080/solr

[Controller]
input_dir=~/virtualcode/audiovideo/Anderson
; if you want to process files directly in their current directory, then set
;output_dir=%(input_dir)s ; the code will know not to move any files, but it will generate files inside input_dir
output_dir=/var/www/audiovideo/Anderson
# apache options
output_url=http://torus.local/audiovideo/Anderson
; when finished - change ownership of the files to the following user
target_user=www-data

; the emails of the people that get notifications when the script has something important to say
mail_to=fedora

; the datastreams to create on each object
; these are in order from highest quality to lowest - if a file doesn't exist, the highest quality
; file available will be converted to create it
datastreams=wav,mp3
; so this will prefer to use the first element in the list that exists
; so "wav,ogg,mp3" will prefer to use wavs to generate the files, will use oggs if no wavs are available, and mp3 if nothing else

; a section to put converter commands in so the ingester can generate missing files
; ** WARNING ** this is a dangerous section, make sure your commands are well formed and don't cause any trouble
; a good reference for this section is <http://www.catswhocode.com/blog/19-ffmpeg-commands-for-all-needs>
; for h.264 info, see this thread <http://flowplayer.org/forum/7/12671>
; a python script to convert anything to mp4 <https://github.com/anchepiece/mp4ize-python>
[Commands]
wav2mp3=ffmpeg -i '%%s' -acodec libmp3lame -ab 256k '%%s'
wav2ogg=ffmpeg -i '%%s' -acodec libvorbis -aq 60 '%%s'
;ogg2mp3=ffmpeg -i '%%s' -acodec libmp3lame -ab 256k '%%s'
mp32wav=ffmpeg -i '%%s' '%%s'
mov2mp4=ffmpeg -i '%%s' -f mp4 -vcodec copy -acodec copy '%%s'
mp42mov=ffmpeg -i %%s -f mov -vcodec copy -acodec copy %%s

; leave this section blank, its for saving ingest process should the script terminate abruptly
[Files]
